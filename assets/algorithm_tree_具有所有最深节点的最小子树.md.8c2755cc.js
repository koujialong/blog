import{_ as s,c as n,o as a,a as l}from"./app.6ccb36cf.js";const p="/blog/img/\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811.png",h=JSON.parse('{"title":"\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811 LC865","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9898\u76EE","slug":"\u9898\u76EE","link":"#\u9898\u76EE","children":[]},{"level":2,"title":"\u9898\u89E3","slug":"\u9898\u89E3","link":"#\u9898\u89E3","children":[]}],"relativePath":"algorithm/tree/\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811.md"}'),o={name:"algorithm/tree/\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811.md"},e=l('<h1 id="\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811-lc865" tabindex="-1">\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811 LC865 <a class="header-anchor" href="#\u5177\u6709\u6240\u6709\u6700\u6DF1\u8282\u70B9\u7684\u6700\u5C0F\u5B50\u6811-lc865" aria-hidden="true">#</a></h1><h2 id="\u9898\u76EE" tabindex="-1">\u9898\u76EE <a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a></h2><ul><li>\u7ED9\u5B9A\u4E00\u4E2A\u6839\u4E3A root \u7684\u4E8C\u53C9\u6811\uFF0C\u6BCF\u4E2A\u8282\u70B9\u7684\u6DF1\u5EA6\u662F \u8BE5\u8282\u70B9\u5230\u6839\u7684\u6700\u77ED\u8DDD\u79BB \u3002</li><li>\u8FD4\u56DE\u5305\u542B\u539F\u59CB\u6811\u4E2D\u6240\u6709 \u6700\u6DF1\u8282\u70B9 \u7684 \u6700\u5C0F\u5B50\u6811 \u3002</li><li>\u5982\u679C\u4E00\u4E2A\u8282\u70B9\u5728 \u6574\u4E2A\u6811 \u7684\u4EFB\u610F\u8282\u70B9\u4E4B\u95F4\u5177\u6709\u6700\u5927\u7684\u6DF1\u5EA6\uFF0C\u5219\u8BE5\u8282\u70B9\u662F \u6700\u6DF1\u7684 \u3002</li><li>\u4E00\u4E2A\u8282\u70B9\u7684 \u5B50\u6811 \u662F\u8BE5\u8282\u70B9\u52A0\u4E0A\u5B83\u7684\u6240\u6709\u540E\u4EE3\u7684\u96C6\u5408\u3002 <img src="'+p+`" alt="img"></li><li>\u8F93\u5165\uFF1Aroot = [3,5,1,6,2,0,8,null,null,7,4]</li><li>\u8F93\u51FA\uFF1A[2,7,4]</li><li>\u89E3\u91CA\uFF1A</li><li>\u6211\u4EEC\u8FD4\u56DE\u503C\u4E3A 2 \u7684\u8282\u70B9\uFF0C\u5728\u56FE\u4E2D\u7528\u9EC4\u8272\u6807\u8BB0\u3002</li><li>\u5728\u56FE\u4E2D\u7528\u84DD\u8272\u6807\u8BB0\u7684\u662F\u6811\u7684\u6700\u6DF1\u7684\u8282\u70B9\u3002</li><li>\u6CE8\u610F\uFF0C\u8282\u70B9 5\u30013 \u548C 2 \u5305\u542B\u6811\u4E2D\u6700\u6DF1\u7684\u8282\u70B9\uFF0C\u4F46\u8282\u70B9 2 \u7684\u5B50\u6811\u6700\u5C0F\uFF0C\u56E0\u6B64\u6211\u4EEC\u8FD4\u56DE\u5B83\u3002</li></ul><h2 id="\u9898\u89E3" tabindex="-1">\u9898\u89E3 <a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a></h2><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for a binary tree node.</span></span>
<span class="line"><span style="color:#676E95;"> * function TreeNode(val, left, right) {</span></span>
<span class="line"><span style="color:#676E95;"> *     this.val = (val===undefined ? 0 : val)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.left = (left===undefined ? null : left)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.right = (right===undefined ? null : right)</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">root</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">return</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> subtreeWithAllDeepest </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// height\u6811\u6700\u5927\u6DF1\u5EA6\uFF0CmaxNode\u6700\u6DF1\u8282\u70B9\u6700\u5C0F\u5B50\u6811</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">maxNode</span><span style="color:#89DDFF;">=null</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">maxNode</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u6DF1\u5EA6\u4F18\u5148\u904D\u5386</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">currDepth</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">===null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">currDepth</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u6807\u8BB0\u5F53\u524D\u904D\u5386\u6811\u7684\u6700\u5927\u6DF1\u5EA6</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">currDepth</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u5F53\u524D\u8282\u70B9\u5DE6\u5B50\u6811\u6DF1\u5EA6</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">leftDepth</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">currDepth</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u5F53\u524D\u8282\u70B9\u53F3\u5B50\u6811\u6DF1\u5EA6</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rightDepth</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">currDepth</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u5982\u679C\u5DE6\u53F3\u5B50\u6811\u6DF1\u5EA6\u90FD\u7B49\u4E8E\u6700\u5927\u6DF1\u5EA6\uFF0C\u8BB0\u5F55\u95EE\u6700\u6DF1\u8282\u70B9\u6700\u5C0F\u5B50\u6811</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">leftDepth</span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;">height</span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">rightDepth</span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;">height</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">maxNode</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">root</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u8FD4\u56DE\u5F53\u524D\u8282\u70B9\u6700\u5927\u6DF1\u5EA6</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">leftDepth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">rightDepth</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,5),t=[e];function r(c,y,F,D,i,A){return a(),n("div",null,t)}const d=s(o,[["render",r]]);export{h as __pageData,d as default};
